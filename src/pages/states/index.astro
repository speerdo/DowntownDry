---
import Layout from '../../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get all venues grouped by state
const { data: venues, error } = await supabase
  .from('venues')
  .select('id, city, state, serves_mocktails, serves_kava, serves_thc, is_alcohol_free, rating')
  .not('state', 'is', null);

if (error) {
  console.error('Error fetching venues:', error);
}

// Group by state and count venues with details
const stateData = venues?.reduce((acc, venue) => {
  const state = venue.state;
  if (!acc[state]) {
    acc[state] = {
      name: state,
      venueCount: 0,
      cityCount: new Set(),
      mocktailVenues: 0,
      kavaVenues: 0,
      thcVenues: 0,
      alcoholFreeVenues: 0,
      totalRatings: 0,
      ratingCount: 0
    };
  }
  
  acc[state].venueCount++;
  if (venue.city) {
    acc[state].cityCount.add(venue.city);
  }
  
  // Count specialty venues
  if (venue.serves_mocktails) acc[state].mocktailVenues++;
  if (venue.serves_kava) acc[state].kavaVenues++;
  if (venue.serves_thc) acc[state].thcVenues++;
  if (venue.is_alcohol_free) acc[state].alcoholFreeVenues++;
  if (venue.rating) {
    acc[state].totalRatings += venue.rating;
    acc[state].ratingCount++;
  }
  
  return acc;
}, {} as Record<string, { 
  name: string; 
  venueCount: number; 
  cityCount: Set<string>;
  mocktailVenues: number;
  kavaVenues: number;
  thcVenues: number;
  alcoholFreeVenues: number;
  totalRatings: number;
  ratingCount: number;
}>) || {};

// Convert cityCount from Set to number and calculate avgRating
const processedStateData = Object.fromEntries(
  Object.entries(stateData).map(([state, data]) => [
    state,
    {
      name: data.name,
      venueCount: data.venueCount,
      cityCount: data.cityCount.size,
      mocktailVenues: data.mocktailVenues,
      kavaVenues: data.kavaVenues,
      thcVenues: data.thcVenues,
      alcoholFreeVenues: data.alcoholFreeVenues,
      avgRating: data.ratingCount > 0 ? data.totalRatings / data.ratingCount : 0,
      totalRatings: data.totalRatings,
      ratingCount: data.ratingCount
    }
  ])
);

const sortedStates = Object.values(processedStateData).sort((a, b) => a.name.localeCompare(b.name));
const topStatesByVenues = [...sortedStates].sort((a, b) => b.venueCount - a.venueCount);

function getStateDescription(state: any) {
  const specialties = [];
  if (state.mocktailVenues > 0) specialties.push(`${state.mocktailVenues} mocktail ${state.mocktailVenues === 1 ? 'venue' : 'venues'}`);
  if (state.kavaVenues > 0) specialties.push(`${state.kavaVenues} kava ${state.kavaVenues === 1 ? 'bar' : 'bars'}`);
  if (state.thcVenues > 0) specialties.push(`${state.thcVenues} THC cocktail ${state.thcVenues === 1 ? 'venue' : 'venues'}`);
  
  if (specialties.length > 0) {
    return `Featuring ${specialties.join(', ')} across ${state.cityCount} ${state.cityCount === 1 ? 'city' : 'cities'}.`;
  }
  
  return `${state.venueCount} alcohol-free venues across ${state.cityCount} ${state.cityCount === 1 ? 'city' : 'cities'}.`;
}

function getStateSlug(stateName: string) {
  return stateName.toLowerCase().replace(/\s+/g, '-');
}
---

<Layout title="States - Downtown Dry">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Hero Section with SEO Content -->
      <div class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gray-900 mb-4 font-heading">Alcohol-Free Venues by State</h1>
        <p class="text-xl text-gray-600 mb-6 max-w-3xl mx-auto">
          Discover the best alcohol-free bars, mocktail lounges, kava bars, and THC cocktail venues across America. Find your perfect sober nightlife experience in any state.
        </p>
        
        <!-- SEO-Rich Description -->
        <div class="max-w-4xl mx-auto mb-8 text-left bg-gray-50 p-6 rounded-lg">
          <h2 class="text-xl font-semibold text-gray-900 mb-3">Your Guide to America's Alcohol-Free Scene</h2>
          <p class="text-gray-700 mb-4">
            Downtown Dry is your comprehensive directory for alcohol-free venues across the United States. Whether you're seeking craft mocktails in trendy urban bars, traditional kava ceremonies, THC-infused cocktails in progressive cities, or completely alcohol-free dining experiences, we've curated the best venues in every state.
          </p>
          <p class="text-gray-700 mb-4">
            Our platform features over {sortedStates.reduce((sum, s) => sum + s.venueCount, 0)} venues across {sortedStates.reduce((sum, s) => sum + s.cityCount, 0)} cities, helping you find the perfect spot for your next night out without alcohol. From coast to coast, discover bars, restaurants, cafes, and lounges that prioritize quality drinks, community, and conscious consumption.
          </p>
          <p class="text-gray-700">
            <strong>Popular Categories:</strong> Non-alcoholic beer bars, craft mocktail lounges, kava bars offering traditional Pacific Island experiences, hemp and THC cocktail venues in legal states, alcohol-free restaurants, and sober social clubs.
          </p>
        </div>
        
        <!-- Overall Stats -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto">
          <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-lg border border-blue-200">
            <div class="text-2xl font-bold text-blue-600">50</div>
            <div class="text-sm text-blue-700">US States + DC</div>
          </div>
          <div class="bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-lg border border-green-200">
            <div class="text-2xl font-bold text-green-600">{sortedStates.reduce((sum, s) => sum + s.cityCount, 0)}</div>
            <div class="text-sm text-green-700">Cities Covered</div>
          </div>
          <div class="bg-gradient-to-r from-purple-50 to-violet-50 p-4 rounded-lg border border-purple-200">
            <div class="text-2xl font-bold text-purple-600">{sortedStates.reduce((sum, s) => sum + s.venueCount, 0)}</div>
            <div class="text-sm text-purple-700">Total Venues</div>
          </div>
          <div class="bg-gradient-to-r from-red-50 to-pink-50 p-4 rounded-lg border border-red-200">
            <div class="text-2xl font-bold text-red-600">{sortedStates.reduce((sum, s) => sum + s.mocktailVenues, 0)}</div>
            <div class="text-sm text-red-700">Mocktail Venues</div>
          </div>
        </div>
      </div>

      <!-- Top States by Venue Count -->
      {topStatesByVenues.slice(0, 6).length > 0 && (
        <div class="mb-12">
          <h2 class="text-2xl font-semibold text-gray-900 mb-3">🌟 States with Most Venues</h2>
          <p class="text-gray-600 mb-6">Explore the states leading America's alcohol-free movement</p>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {topStatesByVenues.slice(0, 6).map((state, index) => (
              <a 
                href={`/states/${getStateSlug(state.name)}/`}
                class="block p-6 bg-gradient-to-br from-neutral-50 to-secondary-50/50 rounded-xl border border-neutral-200 hover:border-indigo-300 hover:shadow-lg transition-all duration-300"
              >
                <div class="flex items-start justify-between mb-4">
                  <div class="flex-1">
                    <h3 class="text-xl font-bold text-gray-900 mb-1 font-heading">{state.name}</h3>
                    <p class="text-sm text-gray-500">#{index + 1} Most Venues</p>
                  </div>
                  <div class="text-right">
                    <div class="text-2xl font-bold text-indigo-600">{state.venueCount}</div>
                    <div class="text-xs text-gray-500">venues</div>
                  </div>
                </div>
                
                <div class="grid grid-cols-2 gap-3 mb-4 text-sm">
                  <div class="flex items-center gap-2">
                    <span class="text-gray-400">🏙️</span>
                    <span class="text-gray-700">{state.cityCount} cities</span>
                  </div>
                  {state.avgRating > 0 && (
                    <div class="flex items-center gap-2">
                      <span class="text-yellow-500">⭐</span>
                      <span class="text-gray-700">{state.avgRating.toFixed(1)} avg rating</span>
                    </div>
                  )}
                  <div class="flex items-center gap-2">
                    <span class="text-green-500">🚫🍺</span>
                    <span class="text-gray-700">{state.alcoholFreeVenues} alcohol-free</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <span class="text-red-500">🍹</span>
                    <span class="text-gray-700">{state.mocktailVenues} mocktail spots</span>
                  </div>
                </div>
                
                <div class="flex flex-wrap gap-2 mb-4">
                  {state.kavaVenues > 0 && (
                    <span class="bg-purple-100 text-purple-700 text-xs font-medium px-2 py-1 rounded-full">
                      🌿 {state.kavaVenues} Kava {state.kavaVenues === 1 ? 'Bar' : 'Bars'}
                    </span>
                  )}
                  {state.thcVenues > 0 && (
                    <span class="bg-green-100 text-green-700 text-xs font-medium px-2 py-1 rounded-full">
                      🌱 {state.thcVenues} THC {state.thcVenues === 1 ? 'Venue' : 'Venues'}
                    </span>
                  )}
                </div>
                
                <div class="text-indigo-600 font-medium">
                  Explore {state.name} →
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- All States Alphabetically -->
      <div class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 mb-3">🗺️ All States & Territories (A-Z)</h2>
        <p class="text-gray-600 mb-6">Browse alcohol-free venues by state alphabetically - from Alabama to Wyoming, find venues in every state</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {sortedStates.map((state, index) => (
          <a 
            href={`/states/${getStateSlug(state.name)}/`}
            class="block p-4 bg-gradient-to-br from-neutral-50 to-secondary-50/50 rounded-lg border border-neutral-200 hover:border-indigo-300 hover:shadow-lg transition-all duration-200"
          >
            <div class="flex items-center justify-between mb-3">
              <h3 class="text-lg font-semibold text-gray-900 font-heading">{state.name}</h3>
              <div class="text-right">
                <div class="text-lg font-bold text-indigo-600">{state.venueCount}</div>
                <div class="text-xs text-gray-500">venues</div>
              </div>
            </div>
            
            <div class="space-y-2 text-sm text-gray-600 mb-3">
              <div class="flex justify-between">
                <span>Cities:</span>
                <span class="font-medium">{state.cityCount}</span>
              </div>
              {state.avgRating > 0 && (
                <div class="flex justify-between">
                  <span>Avg Rating:</span>
                  <span class="font-medium text-yellow-600">⭐ {state.avgRating.toFixed(1)}</span>
                </div>
              )}
              <div class="flex justify-between">
                <span>Alcohol-Free:</span>
                <span class="font-medium text-green-600">{state.alcoholFreeVenues}</span>
              </div>
            </div>
            
            <div class="flex flex-wrap gap-1 mb-3">
              {state.mocktailVenues > 0 && (
                <span class="bg-red-50 text-red-700 text-xs px-2 py-1 rounded">
                  🍹 {state.mocktailVenues}
                </span>
              )}
              {state.kavaVenues > 0 && (
                <span class="bg-purple-50 text-purple-700 text-xs px-2 py-1 rounded">
                  🌿 {state.kavaVenues}
                </span>
              )}
              {state.thcVenues > 0 && (
                <span class="bg-green-50 text-green-700 text-xs px-2 py-1 rounded">
                  🌱 {state.thcVenues}
                </span>
              )}
            </div>
            
            <div class="text-indigo-600 font-medium text-sm">
              Explore →
            </div>
          </a>
        ))}
      </div>

      {sortedStates.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-500">No states found with venues.</p>
        </div>
      )}
    </div>
  </main>
</Layout> 
