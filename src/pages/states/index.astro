---
import Layout from '../../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get all venues grouped by state - handle pagination properly
let allVenues = [];
let from = 0;
const batchSize = 1000;

while (true) {
  const { data: batch, error: batchError } = await supabase
    .from('venues')
    .select('id, city, state, serves_mocktails, serves_kava, serves_thc, is_alcohol_free, rating')
    .not('state', 'is', null)
    .range(from, from + batchSize - 1);
  
  if (batchError) {
    console.error('Error fetching batch:', batchError);
    break;
  }
  
  if (!batch || batch.length === 0) break;
  allVenues.push(...batch);
  
  if (batch.length < batchSize) break; // Last batch
  from += batchSize;
}

const venues = allVenues;
const error = null;

if (error) {
  console.error('Error fetching venues:', error);
}

// Group by state and count venues with details
const stateData = venues?.reduce((acc, venue) => {
  const state = venue.state;
  if (!acc[state]) {
    acc[state] = {
      name: state,
      venueCount: 0,
      cityCount: new Set(),
      mocktailVenues: 0,
      kavaVenues: 0,
      thcVenues: 0,
      alcoholFreeVenues: 0,
      totalRatings: 0,
      ratingCount: 0
    };
  }
  
  acc[state].venueCount++;
  if (venue.city) {
    acc[state].cityCount.add(venue.city);
  }
  
  // Count specialty venues
  if (venue.serves_mocktails) acc[state].mocktailVenues++;
  if (venue.serves_kava) acc[state].kavaVenues++;
  if (venue.serves_thc) acc[state].thcVenues++;
  if (venue.is_alcohol_free) acc[state].alcoholFreeVenues++;
  if (venue.rating) {
    acc[state].totalRatings += venue.rating;
    acc[state].ratingCount++;
  }
  
  return acc;
}, {} as Record<string, { 
  name: string; 
  venueCount: number; 
  cityCount: Set<string>;
  mocktailVenues: number;
  kavaVenues: number;
  thcVenues: number;
  alcoholFreeVenues: number;
  totalRatings: number;
  ratingCount: number;
}>) || {};

// Convert cityCount from Set to number and calculate avgRating
const processedStateData = Object.fromEntries(
  Object.entries(stateData).map(([state, data]) => [
    state,
    {
      name: data.name,
      venueCount: data.venueCount,
      cityCount: data.cityCount.size,
      mocktailVenues: data.mocktailVenues,
      kavaVenues: data.kavaVenues,
      thcVenues: data.thcVenues,
      alcoholFreeVenues: data.alcoholFreeVenues,
      avgRating: data.ratingCount > 0 ? data.totalRatings / data.ratingCount : 0,
      totalRatings: data.totalRatings,
      ratingCount: data.ratingCount
    }
  ])
);

const sortedStates = Object.values(processedStateData).sort((a, b) => a.name.localeCompare(b.name));
const topStatesByVenues = [...sortedStates].sort((a, b) => b.venueCount - a.venueCount);

function getStateDescription(state: any) {
  const specialties = [];
  if (state.mocktailVenues > 0) specialties.push(`${state.mocktailVenues} mocktail ${state.mocktailVenues === 1 ? 'venue' : 'venues'}`);
  if (state.kavaVenues > 0) specialties.push(`${state.kavaVenues} kava ${state.kavaVenues === 1 ? 'bar' : 'bars'}`);
  if (state.thcVenues > 0) specialties.push(`${state.thcVenues} THC cocktail ${state.thcVenues === 1 ? 'venue' : 'venues'}`);
  
  if (specialties.length > 0) {
    return `Featuring ${specialties.join(', ')} across ${state.cityCount} ${state.cityCount === 1 ? 'city' : 'cities'}.`;
  }
  
  return `${state.venueCount} alcohol-free venues across ${state.cityCount} ${state.cityCount === 1 ? 'city' : 'cities'}.`;
}

function getStateSlug(stateName: string) {
  return stateName.toLowerCase().replace(/\s+/g, '-');
}
---

<Layout title="States - Downtown Dry">
  <!-- Hero Section -->
  <section class="py-20 bg-primary-700 text-white relative overflow-hidden">
        <!-- Geometric Background Elements -->
        <div class="absolute inset-0">
          <div class="absolute top-20 left-20 w-32 h-32 bg-secondary-500/20 rounded-full"></div>
          <div class="absolute top-40 right-32 w-24 h-24 bg-accent-500/30 rounded-full"></div>
          <div class="absolute bottom-32 left-1/3 w-40 h-40 bg-neutral-50/10 rounded-full"></div>
          <div class="absolute bottom-20 right-20 w-28 h-28 bg-secondary-500/15 rounded-full"></div>
        </div>
        
        <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h1 class="text-5xl md:text-6xl font-bold mb-6 leading-tight tracking-tight font-heading">
            ALCOHOL-FREE VENUES<br />
            <span style="color: #D9AA55;">BY STATE</span>
          </h1>
          <p class="text-xl md:text-2xl text-neutral-100 leading-relaxed max-w-3xl mx-auto mb-8">
            Discover mocktail bars, kava lounges, and alcohol-free venues across all 50 states
          </p>
          
          <!-- Quick Stats -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto">
            <div class="backdrop-blur-sm bg-black/30 rounded-2xl p-4 border border-white/30 text-center">
              <div class="text-2xl font-bold text-white">{sortedStates.reduce((sum, s) => sum + s.venueCount, 0)}</div>
              <div class="text-sm opacity-80">Venues</div>
            </div>
            <div class="backdrop-blur-sm bg-black/30 rounded-2xl p-4 border border-white/30 text-center">
              <div class="text-2xl font-bold text-white">{sortedStates.reduce((sum, s) => sum + s.cityCount, 0)}</div>
              <div class="text-sm opacity-80">Cities</div>
            </div>
            <div class="backdrop-blur-sm bg-black/30 rounded-2xl p-4 border border-white/30 text-center">
              <div class="text-2xl font-bold text-white">50</div>
              <div class="text-sm opacity-80">States</div>
            </div>
            <div class="backdrop-blur-sm bg-black/30 rounded-2xl p-4 border border-white/30 text-center">
              <div class="text-2xl font-bold text-white">{sortedStates.reduce((sum, s) => sum + s.mocktailVenues, 0)}</div>
              <div class="text-sm opacity-80">Mocktail Spots</div>
            </div>
          </div>
        </div>
      </section>
  
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- SEO Content - Compact -->
      <div class="mb-8 text-center max-w-4xl mx-auto">
        <p class="text-gray-600 text-lg leading-relaxed">
          Your complete guide to alcohol-free nightlife across America. From craft mocktail lounges to traditional kava bars, 
          find the perfect venue for your next night out. Each state page includes verified listings with addresses, hours, and reviews.
        </p>
      </div>

      <!-- States Grid -->
      <div class="mb-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-6 text-center">Browse by State</h2>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {sortedStates.map((state, index) => (
          <a 
            href={`/states/${getStateSlug(state.name)}/`}
            class="block p-4 bg-gradient-to-br from-neutral-50 to-secondary-50/50 rounded-lg border border-neutral-200 hover:border-indigo-300 hover:shadow-lg transition-all duration-200"
          >
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-lg font-semibold text-gray-900 font-heading">{state.name}</h3>
              <div class="text-right">
                <div class="text-lg font-bold text-indigo-600">{state.venueCount}</div>
                <div class="text-xs text-gray-500">venues</div>
              </div>
            </div>
            
            <div class="text-sm text-gray-600 mb-3">
              {state.cityCount} {state.cityCount === 1 ? 'city' : 'cities'}
            </div>
            
            <div class="text-indigo-600 font-medium text-sm">
              Explore {state.name} â†’
            </div>
          </a>
        ))}
      </div>

      {sortedStates.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-500">No states found with venues.</p>
        </div>
      )}
    </div>
  </main>
</Layout> 
