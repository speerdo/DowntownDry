---
import Layout from '../../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get all states with venue counts
const { data: states, error } = await supabase
  .from('cities')
  .select(`
    state,
    venues!inner(id)
  `)
  .not('state', 'is', null);

if (error) {
  console.error('Error fetching states:', error);
}

// Group by state and count venues
const stateData = states?.reduce((acc, city) => {
  const state = city.state;
  if (!acc[state]) {
    acc[state] = {
      name: state,
      venueCount: 0,
      cityCount: 0
    };
  }
  acc[state].venueCount += city.venues.length;
  acc[state].cityCount += 1;
  return acc;
}, {} as Record<string, { name: string; venueCount: number; cityCount: number }>) || {};

const sortedStates = Object.values(stateData).sort((a, b) => a.name.localeCompare(b.name));

function getStateSlug(stateName: string) {
  return stateName.toLowerCase().replace(/\s+/g, '-');
}
---

<Layout title="States - Downtown Dry">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-4xl font-bold text-gray-900 mb-4 font-heading">Browse States</h1>
      <p class="text-lg text-gray-600 mb-8">
        Discover alcohol-free venues across the United States. Click on any state to explore cities and venues.
      </p>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {sortedStates.map((state) => (
          <a 
            href={`/states/${getStateSlug(state.name)}/`}
            class="block p-6 bg-white rounded-lg border border-gray-200 hover:border-indigo-300 hover:shadow-lg transition-all duration-200"
          >
            <h3 class="text-xl font-semibold text-gray-900 mb-2 font-heading">{state.name}</h3>
            <div class="text-sm text-gray-600 space-y-1">
              <p>{state.cityCount} {state.cityCount === 1 ? 'city' : 'cities'}</p>
              <p>{state.venueCount} {state.venueCount === 1 ? 'venue' : 'venues'}</p>
            </div>
            <div class="mt-4 text-indigo-600 font-medium">
              Explore {state.name} â†’
            </div>
          </a>
        ))}
      </div>

      {sortedStates.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-500">No states found with venues.</p>
        </div>
      )}
    </div>
  </main>
</Layout> 
