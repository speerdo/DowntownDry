---
import Layout from '../../../layouts/Layout.astro';
import GoogleMap from '../../../components/GoogleMap.astro';
import { createClient } from '@supabase/supabase-js';

export async function getStaticPaths() {
  const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
  const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
  const supabase = createClient(supabaseUrl, supabaseKey);

  // Get all unique city-state combinations from venues table - handle pagination properly
  let allVenues = [];
  let from = 0;
  const batchSize = 1000;
  
  while (true) {
    const { data: batch } = await supabase
      .from('venues')
      .select('city, state')
      .not('state', 'is', null)
      .not('city', 'is', null)
      .range(from, from + batchSize - 1);
    
    if (!batch || batch.length === 0) break;
    allVenues.push(...batch);
    
    if (batch.length < batchSize) break; // Last batch
    from += batchSize;
  }

  const uniqueCityStates = allVenues.reduce((acc, venue) => {
    const key = `${venue.city}-${venue.state}`;
    if (!acc.has(key)) {
      acc.set(key, { city: venue.city, state: venue.state });
    }
    return acc;
  }, new Map()) || new Map();

  return Array.from(uniqueCityStates.values()).map(({ city, state }) => ({
    params: { 
      state: state.toLowerCase().replace(/\s+/g, '-'),
      city: city.toLowerCase().replace(/\s+/g, '-')
    },
    props: { 
      stateName: state,
      cityName: city
    }
  }));
}

const { state, city } = Astro.params;
const { stateName, cityName } = Astro.props;

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get city info from cities table
const { data: cityData, error: cityError } = await supabase
  .from('cities')
  .select('*')
  .eq('city_name', cityName)
  .eq('state', stateName)
  .single();

// Get all venues for this city
const { data: venues, error: venuesError } = await supabase
  .from('venues')
  .select('*')
  .eq('city', cityName)
  .eq('state', stateName)
  .order('rating', { ascending: false })
  .order('name');

if (cityError || venuesError) {
  console.error('Error fetching data:', { cityError, venuesError });
}

function getStateSlug(stateName: string) {
  return stateName.toLowerCase().replace(/\s+/g, '-');
}

function getCitySlug(cityName: string) {
  return cityName.toLowerCase().replace(/\s+/g, '-');
}

function renderStarRating(rating: number | null) {
  if (!rating) return '';
  const fullStars = Math.floor(rating);
  const hasHalfStar = rating % 1 >= 0.5;
  const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
  
  return '★'.repeat(fullStars) + (hasHalfStar ? '☆' : '') + '☆'.repeat(emptyStars);
}

function calculateDistance(lat1: number, lng1: number, lat2: number, lng2: number) {
  const R = 3959; // Earth's radius in miles
  const dLat = (lat2 - lat1) * Math.PI / 180;
  const dLng = (lng2 - lng1) * Math.PI / 180;
  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
    Math.sin(dLng/2) * Math.sin(dLng/2);
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  return R * c;
}

function getVenueImage(venue: any) {
  // Use custom image if available
  if (venue.image_url) {
    return venue.image_url;
  }
  
  // Generate contextual placeholder images based on venue characteristics
  const venueType = venue.venue_type?.toLowerCase() || 'bar';
  const venueName = venue.name?.toLowerCase() || '';
  
  // Create a unique but deterministic image based on venue ID
  const imageHash = venue.id.slice(-8);
  const imageIndex = parseInt(imageHash, 36) % 10;
  
  // Different image themes based on venue type and services
  if (venue.serves_kava) {
    const kavaImages = [
      'photo-1544787219-7f47ccb76574', // tropical bar
      'photo-1559827260-dc66d52bef19', // natural drinks
      'photo-1578662996442-48f60103fc96'  // zen atmosphere
    ];
    const imageId = kavaImages[imageIndex % kavaImages.length];
    return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
  }
  
  if (venue.serves_thc) {
    const thcImages = [
      'photo-1514933651103-005eec06c04b', // modern bar
      'photo-1572116469696-31de0f17cc34', // cocktail making
      'photo-1481833761820-0509d3217039'  // upscale lounge
    ];
    const imageId = thcImages[imageIndex % thcImages.length];
    return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
  }
  
  if (venue.serves_mocktails || venueType === 'bar') {
    const mocktailImages = [
      'photo-1551024506-0bccd828d307', // colorful cocktails
      'photo-1470337458703-46ad1756a187', // bar atmosphere
      'photo-1572116469696-31de0f17cc34', // cocktail preparation
      'photo-1481833761820-0509d3217039', // upscale bar
      'photo-1514362545857-3bc16c4c7d1b'  // cocktail bar
    ];
    const imageId = mocktailImages[imageIndex % mocktailImages.length];
    return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
  }
  
  if (venueType === 'cafe') {
    const cafeImages = [
      'photo-1501339847302-ac426a4a7cbb', // cozy cafe
      'photo-1554118811-1e0d58224f24', // coffee shop
      'photo-1521017432531-fbd92d768814'  // modern cafe
    ];
    const imageId = cafeImages[imageIndex % cafeImages.length];
    return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
  }
  
  if (venueType === 'restaurant') {
    const restaurantImages = [
      'photo-1517248135467-4c7edcad34c4', // restaurant interior
      'photo-1555396273-367ea4eb4db5', // dining room
      'photo-1590846406792-0adc7f938f1d'  // restaurant atmosphere
    ];
    const imageId = restaurantImages[imageIndex % restaurantImages.length];
    return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
  }
  
  // Default bar/venue images
  const defaultImages = [
    'photo-1514933651103-005eec06c04b', // modern bar
    'photo-1470337458703-46ad1756a187', // bar atmosphere
    'photo-1481833761820-0509d3217039'  // upscale venue
  ];
  const imageId = defaultImages[imageIndex % defaultImages.length];
  return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=400&h=300&q=80`;
}

function generateVenueDescription(venue: any) {
  // Use custom description if available
  if (venue.description) {
    return venue.description;
  }
  
  const services = [];
  if (venue.serves_mocktails) services.push('craft mocktails');
  if (venue.serves_kava) services.push('traditional kava');
  if (venue.serves_thc) services.push('THC-infused drinks');
  if (venue.serves_hemp_drinks) services.push('hemp beverages');
  if (venue.is_alcohol_free) services.push('completely alcohol-free experience');
  
  const venueType = venue.venue_type?.toLowerCase() || 'venue';
  const baseDescription = `A ${venue.is_alcohol_free ? 'fully alcohol-free' : 'mindful drinking'} ${venueType.toLowerCase()} in ${venue.city}`;
  
  if (services.length > 0) {
    return `${baseDescription} specializing in ${services.join(', ')}. Perfect for those seeking quality drinks without the alcohol.`;
  }
  
  return `${baseDescription} offering a welcoming atmosphere for conscious consumers and those exploring alcohol alternatives.`;
}

function getVenueHighlights(venue: any) {
  const highlights = [];
  if (venue.rating && venue.rating >= 4.5) highlights.push('⭐ Highly Rated');
  if (venue.serves_mocktails) highlights.push('🍹 Craft Mocktails');
  if (venue.serves_kava) highlights.push('🌿 Traditional Kava');
  if (venue.serves_thc) highlights.push('🌱 THC Cocktails');
  if (venue.is_alcohol_free) highlights.push('🚫🍺 100% Alcohol-Free');
  if (venue.is_sober_friendly) highlights.push('🤝 Sober-Friendly');
  if (venue.website) highlights.push('🌐 Online Presence');
  if (venue.phone) highlights.push('📞 Reservations Available');
  return highlights;
}

function getVenueAtmosphere(venue: any) {
  const atmospheres = [];
  if (venue.venue_type === 'Bar') atmospheres.push('Social & Vibrant');
  if (venue.venue_type === 'Cafe') atmospheres.push('Cozy & Relaxed');
  if (venue.venue_type === 'Restaurant') atmospheres.push('Dining & Social');
  if (venue.serves_kava) atmospheres.push('Cultural & Mindful');
  if (venue.serves_thc) atmospheres.push('Alternative & Progressive');
  if (venue.is_alcohol_free) atmospheres.push('Health-Conscious');
  
  return atmospheres.length > 0 ? atmospheres.join(' • ') : 'Welcoming & Inclusive';
}

function getCityImage(cityName: string, stateName: string) {
  // Generate city-specific images using reliable Unsplash URLs
  const cityKey = `${cityName}-${stateName}`.toLowerCase();
  const cityHash = cityKey.split('').reduce((a, b) => a + b.charCodeAt(0), 0);
  const imageIndex = cityHash % 10;
  
  // Curated city skyline and landmark images from Unsplash
  const cityImages = [
    'photo-1449824913935-59a10b8d2000', // city skyline
    'photo-1477414348463-c0eb7f1359b6', // urban landscape
    'photo-1583416750470-965b2707b355', // downtown area
    'photo-1519501025264-65ba15a82390', // city lights
    'photo-1496442226666-8d4d0e62e6e9', // metropolitan view
    'photo-1581833971358-2c8b550f87b3', // sunset cityscape
    'photo-1531218150217-54595bc2b934', // urban architecture
    'photo-1480714378408-67cf0d13bc1f', // city buildings
    'photo-1514565131-fce0801e5785', // downtown streets
    'photo-1486299267070-83823f5448dd'  // city panorama
  ];
  
  const imageId = cityImages[imageIndex];
  return `https://images.unsplash.com/${imageId}?auto=format&fit=crop&w=1200&h=600&q=80`;
}

// Calculate city center (average of all venue coordinates)
const cityCenter = venues?.length ? {
  lat: venues.reduce((sum, v) => sum + (v.latitude || 0), 0) / venues.length,
  lng: venues.reduce((sum, v) => sum + (v.longitude || 0), 0) / venues.length
} : null;

// Group venues by venue type
const venuesByType = venues?.reduce((acc, venue) => {
  const venueType = venue.venue_type || 'Bar';
  if (!acc[venueType]) {
    acc[venueType] = [];
  }
  acc[venueType].push(venue);
  return acc;
}, {} as Record<string, typeof venues>) || {};

const venueTypeNames: Record<string, string> = {
  'Bar': 'Bars',
  'Restaurant': 'Restaurants',
  'Cafe': 'Cafes',
  'Brewery': 'Breweries',
  'Dispensary': 'Dispensaries'
};
---

<Layout title={`${cityName}, ${stateName} - Downtown Dry`}>
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-6">
        <ol class="flex items-center space-x-2 text-sm text-gray-500">
          <li><a href="/states/" class="hover:text-indigo-600">States</a></li>
          <li>→</li>
          <li><a href={`/states/${getStateSlug(stateName)}/`} class="hover:text-indigo-600">{stateName}</a></li>
          <li>→</li>
          <li class="text-gray-900 font-medium">{cityName}</li>
        </ol>
      </nav>

      <!-- Hero Section -->
      <div class="mb-12">
        {cityData?.image_url || true ? (
          <!-- Hero with City Image -->
          <div class="relative overflow-hidden rounded-2xl bg-primary-700">
            <div class="absolute inset-0">
              <img 
                src={cityData?.image_url || getCityImage(cityName, stateName)} 
                alt={`${cityName}, ${stateName}`}
                class="w-full h-full object-cover"
                loading="eager"
              />
              <div class="absolute inset-0 bg-primary-700/60"></div>
            </div>
            <div class="relative px-8 py-16 lg:px-12 lg:py-20">
              <div class="max-w-4xl">
                <h1 class="text-4xl lg:text-5xl font-bold text-white mb-6 font-heading leading-tight">
                  Alcohol-Free Venues in<br/>
                  <span class="text-secondary-500">
                    {cityName}, {stateName}
                  </span>
                </h1>
                <p class="text-xl text-neutral-50 mb-8 leading-relaxed max-w-2xl">
                  Discover mindful drinking experiences, craft mocktails, kava bars, and alcohol-free social spaces in your city.
                </p>
                
                <!-- Stats Cards -->
                <div class="grid grid-cols-2 lg:grid-cols-4 gap-4">
                  <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                    <div class="text-2xl font-bold text-white">{venues?.length || 0}</div>
                    <div class="text-sm text-neutral-50">{venues?.length === 1 ? 'Venue' : 'Venues'}</div>
                  </div>
                  
                  {venues?.length && (venues?.filter(v => v.rating).length || 0) > 0 && (
                    <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                      <div class="text-2xl font-bold text-secondary-500">
                        {((venues?.filter(v => v.rating).reduce((sum, v) => sum + (v.rating || 0), 0) || 0) / (venues?.filter(v => v.rating).length || 1)).toFixed(1)}
                      </div>
                      <div class="text-sm text-neutral-50">Avg Rating</div>
                    </div>
                  )}
                  
                  {venues?.length && (
                    <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                      <div class="text-2xl font-bold text-accent-500">
                        {venues?.filter(v => v.is_alcohol_free).length || 0}
                      </div>
                      <div class="text-sm text-neutral-50">Alcohol-Free</div>
                    </div>
                  )}
                  
                  {cityData?.population && (
                    <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                      <div class="text-2xl font-bold text-neutral-50">
                        {cityData.population.toLocaleString()}
                      </div>
                      <div class="text-sm text-neutral-50">Population</div>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        ) : (
          <!-- Hero without City Image -->
          <div class="bg-primary-700 rounded-2xl px-8 py-16 lg:px-12 lg:py-20">
            <div class="max-w-4xl">
              <h1 class="text-4xl lg:text-5xl font-bold text-white mb-6 font-heading leading-tight">
                Alcohol-Free Venues in<br/>
                <span class="text-secondary-500">
                  {cityName}, {stateName}
                </span>
              </h1>
              <p class="text-xl text-neutral-50 mb-8 leading-relaxed max-w-2xl">
                Discover mindful drinking experiences, craft mocktails, kava bars, and alcohol-free social spaces in your city.
              </p>
              
              <!-- Stats Cards -->
              <div class="grid grid-cols-2 lg:grid-cols-4 gap-4">
                <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                  <div class="text-2xl font-bold text-white">{venues?.length || 0}</div>
                  <div class="text-sm text-neutral-50">{venues?.length === 1 ? 'Venue' : 'Venues'}</div>
                </div>
                
                {venues?.length && venues?.some(v => v.rating) && (
                  <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                    <div class="text-2xl font-bold text-secondary-500">
                      {((venues?.filter(v => v.rating).reduce((sum, v) => sum + (v.rating || 0), 0) || 0) / (venues?.filter(v => v.rating).length || 1)).toFixed(1)}
                    </div>
                    <div class="text-sm text-neutral-50">Avg Rating</div>
                  </div>
                )}
                
                {venues?.length && (
                  <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                    <div class="text-2xl font-bold text-accent-500">
                      {venues?.filter(v => v.is_alcohol_free).length || 0}
                    </div>
                    <div class="text-sm text-neutral-50">Alcohol-Free</div>
                  </div>
                )}
                
                {cityData?.population && (
                  <div class="bg-white/15 backdrop-blur-sm p-4 rounded-xl border border-white/30">
                    <div class="text-2xl font-bold text-neutral-50">
                      {cityData.population.toLocaleString()}
                    </div>
                    <div class="text-sm text-neutral-50">Population</div>
                  </div>
                )}
              </div>
            </div>
          </div>
        )}
      </div>

      {venues && venues.length > 0 ? (
        <div>
          <!-- City Description Section -->
          {cityData?.description && (
            <div class="mb-12">
              <div class="bg-gradient-to-r from-indigo-50 to-purple-50 border border-indigo-200 rounded-xl p-8">
                <h2 class="text-2xl font-semibold text-gray-900 mb-4">Discover {cityName}</h2>
                <div class="prose prose-gray max-w-none">
                  <div class="text-gray-700 leading-relaxed" set:html={cityData.description.replace(/\n/g, '<br/>')} />
                </div>
              </div>
            </div>
          )}
          
          {!cityData?.description && cityName.toLowerCase() === 'indianapolis' && (
            <div class="mb-12">
              <div class="bg-gradient-to-r from-indigo-50 to-purple-50 border border-indigo-200 rounded-xl p-8">
                <h2 class="text-2xl font-semibold text-gray-900 mb-4">Discover Indianapolis</h2>
                <div class="prose prose-gray max-w-none">
                  <p class="text-gray-700 leading-relaxed mb-4">
                    Indianapolis is rapidly becoming a hub for conscious drinking and alcohol-free nightlife. From innovative mocktail bars in the trendy neighborhoods to cozy kava lounges, the Circle City offers a growing scene for those seeking mindful social experiences.
                  </p>
                  <p class="text-gray-700 leading-relaxed">
                    Whether you're exploring the vibrant downtown area, checking out the cultural districts, or discovering hidden gems in the surrounding neighborhoods, Indianapolis provides diverse options for alcohol-free socializing and community building.
                  </p>
                </div>
              </div>
            </div>
          )}

          <div class="grid grid-cols-1 xl:grid-cols-5 gap-8">
            <!-- Map Section -->
            <div class="xl:col-span-3">
              <div class="mb-6">
                <h2 class="text-2xl font-semibold text-gray-900 mb-4">Map View</h2>
                <GoogleMap 
                  venues={venues} 
                  height="500px"
                  zoom={13}
                />
              </div>

              <!-- Legend -->
              <div class="mb-8 p-4 bg-gradient-to-r from-gray-50 to-indigo-50 rounded-lg border border-gray-200">
                <h3 class="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                  <span class="text-indigo-600">🗺️</span> Map Legend
                </h3>
                <div class="grid grid-cols-2 gap-3 text-sm">
                  <div class="flex items-center gap-2">
                    <div class="w-4 h-4 rounded-full bg-orange-600"></div>
                    <span>Fully Alcohol-Free</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <div class="w-4 h-4 rounded-full bg-blue-600"></div>
                    <span>Serves Mocktails</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <div class="w-4 h-4 rounded-full bg-purple-600"></div>
                    <span>Kava Bar</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <div class="w-4 h-4 rounded-full bg-green-600"></div>
                    <span>THC Cocktails</span>
                  </div>
                </div>
              </div>
            </div>

            <!-- Venues List -->
            <div class="xl:col-span-2">
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-semibold text-gray-900">All Venues</h2>
                <div class="text-sm text-gray-500">
                  <span id="venueCount">{venues.length}</span> <span id="venueCountText">{venues.length === 1 ? 'venue' : 'venues'}</span> found
                </div>
              </div>

              <!-- Filters and Sorting -->
              <div class="bg-white border border-gray-200 rounded-xl p-6 mb-6">
                <div class="flex items-center justify-between mb-4">
                  <h3 class="text-lg font-semibold text-gray-900">Filter & Sort</h3>
                  <div class="flex items-center gap-3">
                    <button 
                      id="toggleFilters" 
                      class="md:hidden text-sm text-gray-600 hover:text-gray-700 font-medium"
                    >
                      <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
                      </svg>
                      Filters
                    </button>
                    <button 
                      id="clearFilters" 
                      class="text-sm text-indigo-600 hover:text-indigo-700 font-medium"
                    >
                      Clear All
                    </button>
                  </div>
                </div>
                
                <div id="filtersContent" class="hidden md:block">
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                  <!-- Sort By -->
                  <div>
                    <label for="sortBy" class="block text-sm font-medium text-gray-700 mb-2">Sort By</label>
                    <select id="sortBy" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-indigo-500 focus:border-indigo-500">
                      <option value="rating-desc">Rating (High to Low)</option>
                      <option value="rating-asc">Rating (Low to High)</option>
                      <option value="name-asc">Name (A to Z)</option>
                      <option value="name-desc">Name (Z to A)</option>
                      <option value="type-asc">Venue Type</option>
                    </select>
                  </div>
                  
                  <!-- Venue Type Filter -->
                  <div>
                    <label for="typeFilter" class="block text-sm font-medium text-gray-700 mb-2">Venue Type</label>
                    <select id="typeFilter" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-indigo-500 focus:border-indigo-500">
                      <option value="">All Types</option>
                      <option value="Bar">Bars</option>
                      <option value="Restaurant">Restaurants</option>
                      <option value="Cafe">Cafes</option>
                      <option value="Brewery">Breweries</option>
                      <option value="Dispensary">Dispensaries</option>
                    </select>
                  </div>
                </div>
                
                <!-- Service Filters -->
                <div class="mb-4">
                  <label class="block text-sm font-medium text-gray-700 mb-3">Services & Features</label>
                  <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3">
                    <label class="flex items-center space-x-2 cursor-pointer">
                      <input type="checkbox" id="filterMocktails" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                      <span class="text-sm text-gray-700">🍹 Mocktails</span>
                    </label>
                    <label class="flex items-center space-x-2 cursor-pointer">
                      <input type="checkbox" id="filterKava" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                      <span class="text-sm text-gray-700">🌿 Kava</span>
                    </label>
                    <label class="flex items-center space-x-2 cursor-pointer">
                      <input type="checkbox" id="filterTHC" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                      <span class="text-sm text-gray-700">🌱 THC</span>
                    </label>
                    <label class="flex items-center space-x-2 cursor-pointer">
                      <input type="checkbox" id="filterHempDrinks" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                      <span class="text-sm text-gray-700">🌾 Hemp</span>
                    </label>
                    <label class="flex items-center space-x-2 cursor-pointer">
                      <input type="checkbox" id="filterAlcoholFree" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                      <span class="text-sm text-gray-700">🚫 Alcohol-Free</span>
                    </label>
                  </div>
                </div>
                
                <!-- Rating Filter -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label for="minRating" class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
                    <select id="minRating" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-indigo-500 focus:border-indigo-500">
                      <option value="">Any Rating</option>
                      <option value="4.5">4.5+ Stars</option>
                      <option value="4.0">4.0+ Stars</option>
                      <option value="3.5">3.5+ Stars</option>
                      <option value="3.0">3.0+ Stars</option>
                    </select>
                  </div>
                  <div>
                    <label for="searchVenues" class="block text-sm font-medium text-gray-700 mb-2">Search Venues</label>
                    <input 
                      type="text" 
                      id="searchVenues" 
                      placeholder="Search by name or address..." 
                      class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-indigo-500 focus:border-indigo-500"
                    >
                  </div>
                </div>
                </div>
              </div>

              <!-- Quick Stats -->
              <div class="grid grid-cols-2 gap-3 mb-6">
                <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-3 rounded-lg border border-blue-200">
                  <div class="text-lg font-bold text-blue-600">
                    {venues.filter(v => v.serves_mocktails).length}
                  </div>
                  <div class="text-xs text-blue-700">Serve Mocktails</div>
                </div>
                <div class="bg-gradient-to-r from-green-50 to-emerald-50 p-3 rounded-lg border border-green-200">
                  <div class="text-lg font-bold text-green-600">
                    {venues.filter(v => v.is_alcohol_free).length}
                  </div>
                  <div class="text-xs text-green-700">100% Alcohol-Free</div>
                </div>
              </div>
            
            <div id="venuesContainer" class="space-y-8">
              {Object.entries(venuesByType).map(([venueType, typeVenues]) => (
                <div class="venue-type-section" data-venue-type={venueType}>
                  <div class="flex items-center justify-between mb-4">
                    <div class="flex items-center gap-3">
                      <h3 class="text-lg font-semibold text-gray-900">
                        {venueTypeNames[venueType] || venueType}
                      </h3>
                      <span class="bg-gray-100 text-gray-600 text-xs font-medium px-2 py-1 rounded-full type-count">
                        {(typeVenues as any[]).length}
                      </span>
                    </div>
                    
                    <!-- Show what services this venue type offers -->
                    <div class="flex gap-1 text-xs">
                      {(typeVenues as any[]).some(v => v.serves_mocktails) && (
                        <span class="bg-blue-100 text-blue-700 px-2 py-1 rounded-full">🍹</span>
                      )}
                      {(typeVenues as any[]).some(v => v.serves_kava) && (
                        <span class="bg-purple-100 text-purple-700 px-2 py-1 rounded-full">🌿</span>
                      )}
                      {(typeVenues as any[]).some(v => v.serves_thc) && (
                        <span class="bg-green-100 text-green-700 px-2 py-1 rounded-full">🌱</span>
                      )}
                      {(typeVenues as any[]).some(v => v.is_alcohol_free) && (
                        <span class="bg-orange-100 text-orange-700 px-2 py-1 rounded-full">🚫</span>
                      )}
                    </div>
                  </div>
                  <div class="space-y-6 venues-list">
                    {(typeVenues as any[]).map((venue) => (
                      <div 
                        class="venue-card bg-white border border-gray-200 rounded-xl overflow-hidden hover:border-indigo-300 hover:shadow-xl transition-all duration-300"
                        data-venue-id={venue.id}
                        data-venue-name={venue.name?.toLowerCase() || ''}
                        data-venue-type={venue.venue_type || ''}

                        data-venue-rating={venue.rating || '0'}
                        data-serves-mocktails={venue.serves_mocktails || false}
                        data-serves-kava={venue.serves_kava || false}
                        data-serves-thc={venue.serves_thc || false}
                        data-serves-hemp-drinks={venue.serves_hemp_drinks || false}
                        data-is-alcohol-free={venue.is_alcohol_free || false}
                        data-is-sober-friendly={venue.is_sober_friendly || false}
                        data-address={venue.address?.toLowerCase() || ''}
                      >
                        <!-- Venue Image -->
                        <div class="relative h-80 bg-gradient-to-br from-indigo-100 to-purple-100">
                          <img 
                            src={getVenueImage(venue)} 
                            alt={`${venue.name} - ${venue.venue_type} in ${venue.city}`}
                            class="w-full h-full object-cover object-top"
                            loading="lazy"
                          />
                          <div class="absolute top-4 left-4">
                            {venue.rating && venue.rating >= 4.5 && (
                              <span class="bg-yellow-400 text-yellow-900 text-xs font-bold px-2 py-1 rounded-full">
                                ⭐ Top Rated
                              </span>
                            )}
                          </div>
                          <div class="absolute top-4 right-4 flex flex-col gap-2">
                            {venue.serves_thc && (
                              <span class="bg-green-500 text-white text-xs font-bold px-3 py-1 rounded-md shadow-lg border-l-4 border-green-700">
                                🌱 Serves Delta
                              </span>
                            )}
                            {venue.serves_kava && (
                              <span class="bg-purple-500 text-white text-xs font-bold px-3 py-1 rounded-md shadow-lg border-l-4 border-purple-700">
                                🌿 Kava Bar
                              </span>
                            )}
                            {venue.serves_mocktails && (
                              <span class="bg-blue-500 text-white text-xs font-bold px-3 py-1 rounded-md shadow-lg border-l-4 border-blue-700">
                                🍹 Mocktails
                              </span>
                            )}
                            {venue.is_alcohol_free && (
                              <span class="bg-orange-500 text-white text-xs font-bold px-3 py-1 rounded-md shadow-lg border-l-4 border-orange-700">
                                🚫 Alcohol-Free
                              </span>
                            )}
                            {venue.is_sober_friendly && !venue.is_alcohol_free && (
                              <span class="bg-teal-500 text-white text-xs font-bold px-3 py-1 rounded-md shadow-lg border-l-4 border-teal-700">
                                🤝 Sober-Friendly
                              </span>
                            )}
                          </div>
                        </div>

                        <div class="p-6">
                          <!-- Header with name and rating -->
                          <div class="flex items-start justify-between mb-3">
                            <div class="flex-1">
                              <h4 class="text-xl font-bold text-gray-900 mb-1 font-heading">{venue.name}</h4>
                              <p class="text-sm text-gray-600 mb-2">{getVenueAtmosphere(venue)}</p>
                              {venue.rating && (
                                <div class="flex items-center gap-2 mb-3">
                                  <span class="text-yellow-500 text-lg" style="line-height: 1;">
                                    {renderStarRating(venue.rating)}
                                  </span>
                                  <span class="text-sm font-medium text-gray-700">
                                    {venue.rating.toFixed(1)}
                                  </span>
                                  <span class="text-xs text-gray-500">
                                    ({venue.enrichment_source === 'Google Maps Scraping' ? 'Google Reviews' : 'Reviews'})
                                  </span>
                                </div>
                              )}
                            </div>
                          </div>

                          <!-- Description -->
                          <div class="mb-4">
                            <p class="text-gray-700 text-sm leading-relaxed">
                              {generateVenueDescription(venue)}
                            </p>
                          </div>

                          <!-- Highlights -->
                          {getVenueHighlights(venue).length > 0 && (
                            <div class="mb-4">
                              <h5 class="text-sm font-semibold text-gray-900 mb-2">What Makes This Special</h5>
                              <div class="grid grid-cols-1 sm:grid-cols-2 gap-2">
                                {getVenueHighlights(venue).map((highlight) => (
                                  <div class="flex items-center gap-2 text-sm text-gray-600">
                                    <span>{highlight}</span>
                                  </div>
                                ))}
                              </div>
                            </div>
                          )}

                          <!-- Location Info -->
                          <div class="space-y-2 mb-4">
                            {venue.address && (
                              <div class="flex items-start gap-2">
                                <svg class="w-4 h-4 text-gray-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                                </svg>
                                <div class="flex-1">
                                  <p class="text-sm text-gray-600 font-medium">{venue.address}</p>
                                  {venue.zip_code && (
                                    <p class="text-xs text-gray-500">{venue.zip_code}</p>
                                  )}
                                  {cityCenter && venue.latitude && venue.longitude && (
                                    <p class="text-xs text-indigo-600 mt-1 font-medium">
                                      📍 {calculateDistance(cityCenter.lat, cityCenter.lng, venue.latitude, venue.longitude).toFixed(1)} miles from downtown
                                    </p>
                                  )}
                                </div>
                              </div>
                            )}
                          </div>

                          <!-- Special Features -->
                          {(venue.hemp_brand || venue.is_dispensary) && (
                            <div class="mb-4 p-4 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg border border-green-200">
                              <h5 class="text-sm font-semibold text-gray-900 mb-2 flex items-center gap-2">
                                <span class="text-green-600">✨</span> Special Features
                              </h5>
                              <div class="space-y-1">
                                {venue.hemp_brand && (
                                  <p class="text-sm text-gray-700">
                                    <span class="font-medium text-green-700">Hemp Brand:</span> {venue.hemp_brand}
                                  </p>
                                )}
                                {venue.is_dispensary && (
                                  <p class="text-sm text-gray-700">
                                    <span class="font-medium text-green-700">🏪 Licensed Dispensary</span>
                                  </p>
                                )}
                              </div>
                            </div>
                          )}

                          <!-- Action Buttons -->
                          <div class="flex flex-wrap gap-3 mb-4">
                            {venue.phone && (
                              <a 
                                href={`tel:${venue.phone}`} 
                                class="inline-flex items-center gap-2 px-4 py-2 bg-indigo-600 text-white text-sm font-medium rounded-lg hover:bg-indigo-700 transition-colors"
                              >
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                  <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
                                </svg>
                                Call Now
                              </a>
                            )}
                            {venue.website && (
                              <a 
                                href={venue.website} 
                                target="_blank" 
                                rel="noopener noreferrer"
                                class="inline-flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-50 transition-colors"
                              >
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                  <path fill-rule="evenodd" d="M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.559-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.559.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z" clip-rule="evenodd" />
                                </svg>
                                Visit Website
                                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                                  <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                                </svg>
                              </a>
                            )}
                            {venue.latitude && venue.longitude && (
                              <a 
                                href={`https://www.google.com/maps/dir/?api=1&destination=${venue.latitude},${venue.longitude}`}
                                target="_blank" 
                                rel="noopener noreferrer"
                                class="inline-flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-50 transition-colors"
                              >
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                                </svg>
                                Get Directions
                              </a>
                            )}
                          </div>

                          <!-- Venue Tags -->
                          <div class="flex flex-wrap gap-2">
                            {venue.venue_type && (
                              <span class="bg-gray-100 text-gray-800 text-xs font-medium px-3 py-1 rounded-full">
                                {venue.venue_type}
                              </span>
                            )}
                            {venue.serves_thc && (
                              <span class="bg-green-100 text-green-800 text-xs font-medium px-3 py-1 rounded-full border-l-4 border-green-500">
                                🌱 Serves Delta
                              </span>
                            )}
                            {venue.serves_kava && (
                              <span class="bg-purple-100 text-purple-800 text-xs font-medium px-3 py-1 rounded-full border-l-4 border-purple-500">
                                🌿 Kava
                              </span>
                            )}
                            {venue.serves_mocktails && (
                              <span class="bg-blue-100 text-blue-800 text-xs font-medium px-3 py-1 rounded-full border-l-4 border-blue-500">
                                🍹 Mocktails
                              </span>
                            )}
                            {venue.serves_hemp_drinks && (
                              <span class="bg-orange-100 text-orange-800 text-xs font-medium px-3 py-1 rounded-full border-l-4 border-orange-500">
                                🌾 Hemp Drinks
                              </span>
                            )}
                            {venue.is_sober_friendly && (
                              <span class="bg-teal-100 text-teal-800 text-xs font-medium px-3 py-1 rounded-full border-l-4 border-teal-500">
                                🤝 Sober-Friendly
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
        </div>
      ) : (
        <div class="text-center py-12 bg-gray-50 rounded-lg">
          <p class="text-gray-500 mb-4">No venues found in {cityName} yet.</p>
          <a 
            href="/contact" 
            class="text-indigo-600 hover:text-indigo-700 font-medium"
          >
            Know of a venue? Let us know →
          </a>
        </div>
      )}
    </div>
  </main>

  <script>
    // Store original venues data for filtering
    const venuesData = JSON.parse(`{venues ? JSON.stringify(venues) : '[]'}`);
    let filteredVenues = [...venuesData];

    // Initialize filtering functionality
    document.addEventListener('DOMContentLoaded', function() {
      setupFilters();
      setupSearch();
      setupSorting();
      setupClearFilters();
      setupMobileToggle();
      loadFiltersFromURL();
      
      // Apply initial sort (rating desc)
      applyFiltersAndSort();
    });

    function setupFilters() {
      // Service filter checkboxes
      ['filterMocktails', 'filterKava', 'filterTHC', 'filterHempDrinks', 'filterAlcoholFree'].forEach(id => {
        const checkbox = document.getElementById(id);
        if (checkbox) {
          checkbox.addEventListener('change', applyFiltersAndSort);
        }
      });

      // Dropdown filters
      ['typeFilter', 'minRating'].forEach(id => {
        const select = document.getElementById(id);
        if (select) {
          select.addEventListener('change', applyFiltersAndSort);
        }
      });
    }

    function setupSearch() {
      const searchInput = document.getElementById('searchVenues') as HTMLInputElement;
      if (searchInput) {
        let debounceTimer: any;
        searchInput.addEventListener('input', function() {
          clearTimeout(debounceTimer);
          debounceTimer = setTimeout(applyFiltersAndSort, 300);
        });
      }
    }

    function setupSorting() {
      const sortSelect = document.getElementById('sortBy');
      if (sortSelect) {
        sortSelect.addEventListener('change', applyFiltersAndSort);
      }
    }

    function setupClearFilters() {
      const clearButton = document.getElementById('clearFilters');
      if (clearButton) {
        clearButton.addEventListener('click', function() {
          // Clear all filters
          (document.getElementById('typeFilter') as HTMLSelectElement).value = '';
          (document.getElementById('minRating') as HTMLSelectElement).value = '';
          (document.getElementById('searchVenues') as HTMLInputElement).value = '';
          (document.getElementById('sortBy') as HTMLSelectElement).value = 'rating-desc';
          
          // Uncheck all service filters
          ['filterMocktails', 'filterKava', 'filterTHC', 'filterHempDrinks', 'filterAlcoholFree'].forEach(id => {
            const checkbox = document.getElementById(id) as HTMLInputElement;
            if (checkbox) checkbox.checked = false;
          });
          
          applyFiltersAndSort();
        });
      }
    }

    function setupMobileToggle() {
      const toggleButton = document.getElementById('toggleFilters');
      const filtersContent = document.getElementById('filtersContent');
      
      if (toggleButton && filtersContent) {
        toggleButton.addEventListener('click', function() {
          const isHidden = filtersContent.classList.contains('hidden');
          if (isHidden) {
            filtersContent.classList.remove('hidden');
            filtersContent.classList.add('block');
          } else {
            filtersContent.classList.add('hidden');
            filtersContent.classList.remove('block');
          }
        });
      }
    }

    function updateVenueDisplay() {
      // Hide all venue cards first
      const allVenueCards = document.querySelectorAll('.venue-card');
      allVenueCards.forEach(card => {
        (card as HTMLElement).style.display = 'none';
      });

      // Hide all venue type sections
      const typeSections = document.querySelectorAll('.venue-type-section');
      typeSections.forEach(section => {
        (section as HTMLElement).style.display = 'none';
      });

      // Group filtered venues by venue type
      const filteredByType: Record<string, any[]> = {};
      filteredVenues.forEach((venue: any) => {
        const venueType = venue.venue_type || 'Bar';
        if (!filteredByType[venueType]) {
          filteredByType[venueType] = [];
        }
        filteredByType[venueType].push(venue);
      });

      // Show relevant venue types and venues
      Object.entries(filteredByType).forEach(([venueType, venues]) => {
        const typeSection = document.querySelector(`[data-venue-type="${venueType}"]`);
        if (typeSection) {
          (typeSection as HTMLElement).style.display = 'block';
          
          // Update type count
          const countSpan = typeSection.querySelector('.type-count');
          if (countSpan) {
            countSpan.textContent = venues.length.toString();
          }
          
          // Show venues in this type
          venues.forEach((venue: any) => {
            const venueCard = document.querySelector(`[data-venue-id="${venue.id}"]`);
            if (venueCard) {
              (venueCard as HTMLElement).style.display = 'block';
            }
          });
        }
      });

      // If no venues match, show a message
      if (filteredVenues.length === 0) {
        showNoResultsMessage();
      } else {
        hideNoResultsMessage();
      }
    }

    function updateVenueCount() {
      const countElement = document.getElementById('venueCount');
      const countTextElement = document.getElementById('venueCountText');
      
      if (countElement) {
        countElement.textContent = filteredVenues.length.toString();
      }
      
      if (countTextElement) {
        countTextElement.textContent = filteredVenues.length === 1 ? 'venue' : 'venues';
      }
    }

    function showNoResultsMessage() {
      hideNoResultsMessage(); // Remove any existing message
      
      const container = document.getElementById('venuesContainer');
      if (container) {
        const noResultsDiv = document.createElement('div');
        noResultsDiv.id = 'noResultsMessage';
        noResultsDiv.className = 'text-center py-12 bg-gray-50 rounded-lg';
        noResultsDiv.innerHTML = `
          <div class="text-gray-500 mb-4">
            <svg class="w-12 h-12 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <p class="text-lg font-medium">No venues match your filters</p>
            <p class="text-sm">Try adjusting your search criteria or clearing some filters</p>
          </div>
          <button 
            onclick="document.getElementById('clearFilters').click()" 
            class="text-indigo-600 hover:text-indigo-700 font-medium text-sm"
          >
            Clear All Filters
          </button>
        `;
        container.appendChild(noResultsDiv);
      }
    }

    function hideNoResultsMessage() {
      const existingMessage = document.getElementById('noResultsMessage');
      if (existingMessage) {
        existingMessage.remove();
      }
    }

    // URL state management for sharing filtered views
    function updateURLWithFilters() {
      const params = new URLSearchParams();
      
      const typeFilter = (document.getElementById('typeFilter') as HTMLSelectElement)?.value;
      const minRating = (document.getElementById('minRating') as HTMLSelectElement)?.value;
      const searchTerm = (document.getElementById('searchVenues') as HTMLInputElement)?.value;
      const sortBy = (document.getElementById('sortBy') as HTMLSelectElement)?.value;
      
      if (typeFilter) params.set('type', typeFilter);
      if (minRating) params.set('rating', minRating);
      if (searchTerm) params.set('search', searchTerm);
      if (sortBy && sortBy !== 'rating-desc') params.set('sort', sortBy);
      
      // Service filters
      const services: string[] = [];
      if ((document.getElementById('filterMocktails') as HTMLInputElement)?.checked) services.push('mocktails');
      if ((document.getElementById('filterKava') as HTMLInputElement)?.checked) services.push('kava');
      if ((document.getElementById('filterTHC') as HTMLInputElement)?.checked) services.push('thc');
      if ((document.getElementById('filterHempDrinks') as HTMLInputElement)?.checked) services.push('hemp');
      if ((document.getElementById('filterAlcoholFree') as HTMLInputElement)?.checked) services.push('alcohol-free');
      
      if (services.length > 0) params.set('services', services.join(','));
      
      const newURL = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
      window.history.replaceState({}, '', newURL);
    }

    function loadFiltersFromURL() {
      const params = new URLSearchParams(window.location.search);
      
      // Set dropdown values
      const typeParam = params.get('type');
      const ratingParam = params.get('rating');
      const searchParam = params.get('search');
      const sortParam = params.get('sort');
      
      if (typeParam) (document.getElementById('typeFilter') as HTMLSelectElement).value = typeParam;
      if (ratingParam) (document.getElementById('minRating') as HTMLSelectElement).value = ratingParam;
      if (searchParam) (document.getElementById('searchVenues') as HTMLInputElement).value = searchParam;
      if (sortParam) (document.getElementById('sortBy') as HTMLSelectElement).value = sortParam;
      
      // Set service checkboxes
      const services = params.get('services')?.split(',') || [];
      (document.getElementById('filterMocktails') as HTMLInputElement).checked = services.includes('mocktails');
      (document.getElementById('filterKava') as HTMLInputElement).checked = services.includes('kava');
      (document.getElementById('filterTHC') as HTMLInputElement).checked = services.includes('thc');
      (document.getElementById('filterHempDrinks') as HTMLInputElement).checked = services.includes('hemp');
      (document.getElementById('filterAlcoholFree') as HTMLInputElement).checked = services.includes('alcohol-free');
    }



    function applyFiltersAndSort() {
      // Get filter values
      const typeFilter = (document.getElementById('typeFilter') as HTMLSelectElement)?.value || '';
      const minRating = parseFloat((document.getElementById('minRating') as HTMLSelectElement)?.value || '0');
      const searchTerm = (document.getElementById('searchVenues') as HTMLInputElement)?.value?.toLowerCase() || '';
      
      // Get service filters
      const filterMocktails = (document.getElementById('filterMocktails') as HTMLInputElement)?.checked || false;
      const filterKava = (document.getElementById('filterKava') as HTMLInputElement)?.checked || false;
      const filterTHC = (document.getElementById('filterTHC') as HTMLInputElement)?.checked || false;
      const filterHempDrinks = (document.getElementById('filterHempDrinks') as HTMLInputElement)?.checked || false;
      const filterAlcoholFree = (document.getElementById('filterAlcoholFree') as HTMLInputElement)?.checked || false;
      
      // Get sort option
      const sortBy = (document.getElementById('sortBy') as HTMLSelectElement)?.value || 'rating-desc';

      // Filter venues
      filteredVenues = venuesData.filter((venue: any) => {
        // Type filter
        if (typeFilter && venue.venue_type !== typeFilter) return false;
        
        // Rating filter
        if (minRating > 0 && (venue.rating || 0) < minRating) return false;
        
        // Search filter
        if (searchTerm) {
          const searchableText = `${venue.name || ''} ${venue.address || ''}`.toLowerCase();
          if (!searchableText.includes(searchTerm)) return false;
        }
        
        // Service filters (if any are checked, venue must match at least one)
        const serviceFilters = [
          { checked: filterMocktails, field: 'serves_mocktails' },
          { checked: filterKava, field: 'serves_kava' },
          { checked: filterTHC, field: 'serves_thc' },
          { checked: filterHempDrinks, field: 'serves_hemp_drinks' },
          { checked: filterAlcoholFree, field: 'is_alcohol_free' }
        ];
        
        const activeServiceFilters = serviceFilters.filter(f => f.checked);
        if (activeServiceFilters.length > 0) {
          const matchesService = activeServiceFilters.some(filter => venue[filter.field]);
          if (!matchesService) return false;
        }
        
        return true;
      });

      // Sort venues
      filteredVenues.sort((a: any, b: any) => {
        switch (sortBy) {
          case 'rating-desc':
            return (b.rating || 0) - (a.rating || 0);
          case 'rating-asc':
            return (a.rating || 0) - (b.rating || 0);
          case 'name-asc':
            return (a.name || '').localeCompare(b.name || '');
          case 'name-desc':
            return (b.name || '').localeCompare(a.name || '');
          case 'type-asc':
            return (a.venue_type || '').localeCompare(b.venue_type || '');
          default:
            return 0;
        }
      });

      // Update the display
      updateVenueDisplay();
      updateVenueCount();
      updateURLWithFilters();
    }
  </script>
</Layout> 
