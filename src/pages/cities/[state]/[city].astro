---
import Layout from '../../../layouts/Layout.astro';
import GoogleMap from '../../../components/GoogleMap.astro';
import { createClient } from '@supabase/supabase-js';

export async function getStaticPaths() {
  const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
  const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
  const supabase = createClient(supabaseUrl, supabaseKey);

  // Get all cities with venues
  const { data: cities } = await supabase
    .from('cities')
    .select(`
      city_name,
      state,
      venues!inner(id)
    `)
    .not('state', 'is', null);

  return cities?.map(city => ({
    params: { 
      state: city.state.toLowerCase().replace(/\s+/g, '-'),
      city: city.city_name.toLowerCase().replace(/\s+/g, '-')
    },
    props: { 
      stateName: city.state,
      cityName: city.city_name
    }
  })) || [];
}

const { state, city } = Astro.params;
const { stateName, cityName } = Astro.props;

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get city info and all venues
const { data: cityData, error: cityError } = await supabase
  .from('cities')
  .select(`
    city_name,
    full_name,
    state,
    population
  `)
  .eq('city_name', cityName)
  .eq('state', stateName)
  .single();

const { data: venues, error: venuesError } = await supabase
  .from('venues')
  .select(`
    id,
    name,
    address,
    phone,
    website,
    latitude,
    longitude,
    venue_type,
    category,
    is_alcohol_free,
    serves_mocktails,
    serves_kava,
    serves_thc,
    serves_hemp_drinks
  `)
  .eq('city', cityName)
  .eq('state', stateName)
  .order('name');

if (cityError || venuesError) {
  console.error('Error fetching data:', { cityError, venuesError });
}

function getStateSlug(stateName: string) {
  return stateName.toLowerCase().replace(/\s+/g, '-');
}

function getCitySlug(cityName: string) {
  return cityName.toLowerCase().replace(/\s+/g, '-');
}

// Group venues by category
const venuesByCategory = venues?.reduce((acc, venue) => {
  const category = venue.category || 'other';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(venue);
  return acc;
}, {} as Record<string, typeof venues>) || {};

const categoryNames: Record<string, string> = {
  'kava': 'Kava Bars',
  'mocktail': 'Mocktail Bars',
  'restaurant': 'Restaurants',
  'cafe': 'Cafes',
  'brewery': 'Breweries',
  'bar': 'Bars',
  'other': 'Other Venues'
};
---

<Layout title={`${cityName}, ${stateName} - Downtown Dry`}>
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-6">
        <ol class="flex items-center space-x-2 text-sm text-gray-500">
          <li><a href="/cities/" class="hover:text-indigo-600">Cities</a></li>
          <li>→</li>
          <li><a href={`/cities/${getStateSlug(stateName)}/`} class="hover:text-indigo-600">{stateName}</a></li>
          <li>→</li>
          <li class="text-gray-900 font-medium">{cityName}</li>
        </ol>
      </nav>

      <div class="mb-8">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">
          Alcohol-Free Venues in {cityName}, {stateName}
        </h1>
        <div class="flex flex-wrap items-center gap-4 text-lg text-gray-600">
          <span>{venues?.length || 0} {venues?.length === 1 ? 'venue' : 'venues'}</span>
          {cityData?.population && (
            <span>• Population: {cityData.population.toLocaleString()}</span>
          )}
        </div>
      </div>

      {venues && venues.length > 0 ? (
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Map Section -->
          <div class="lg:col-span-2">
            <div class="mb-6">
              <h2 class="text-2xl font-semibold text-gray-900 mb-4">Map View</h2>
              <GoogleMap 
                venues={venues} 
                height="500px"
                zoom={13}
              />
            </div>

            <!-- Legend -->
            <div class="mb-8 p-4 bg-gray-50 rounded-lg">
              <h3 class="font-semibold text-gray-900 mb-3">Map Legend</h3>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <div class="flex items-center gap-2">
                  <div class="w-4 h-4 rounded-full bg-green-600"></div>
                  <span>Fully Alcohol-Free</span>
                </div>
                <div class="flex items-center gap-2">
                  <div class="w-4 h-4 rounded-full bg-red-600"></div>
                  <span>Serves Mocktails</span>
                </div>
                <div class="flex items-center gap-2">
                  <div class="w-4 h-4 rounded-full bg-purple-600"></div>
                  <span>Kava Bar</span>
                </div>
                <div class="flex items-center gap-2">
                  <div class="w-4 h-4 rounded-full bg-indigo-600"></div>
                  <span>Other</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Venues List -->
          <div class="lg:col-span-1">
            <h2 class="text-2xl font-semibold text-gray-900 mb-4">Venues</h2>
            
            <div class="space-y-6">
              {Object.entries(venuesByCategory).map(([category, categoryVenues]) => (
                <div>
                  <h3 class="text-lg font-medium text-gray-900 mb-3">
                    {categoryNames[category] || category}
                  </h3>
                  <div class="space-y-3">
                    {categoryVenues.map((venue) => (
                      <div class="p-4 bg-white border border-gray-200 rounded-lg hover:border-indigo-300 transition-colors">
                        <h4 class="font-semibold text-gray-900 mb-2">{venue.name}</h4>
                        
                        {venue.address && (
                          <p class="text-sm text-gray-600 mb-2">{venue.address}</p>
                        )}

                        {venue.phone && (
                          <p class="text-sm text-gray-600 mb-2">
                            <a href={`tel:${venue.phone}`} class="hover:text-indigo-600">
                              {venue.phone}
                            </a>
                          </p>
                        )}

                        {venue.website && (
                          <p class="text-sm mb-2">
                            <a 
                              href={venue.website} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              class="text-indigo-600 hover:text-indigo-700"
                            >
                              Visit Website →
                            </a>
                          </p>
                        )}

                        <!-- Venue Tags -->
                        <div class="flex flex-wrap gap-1 mt-3">
                          {venue.venue_type && (
                            <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
                              {venue.venue_type}
                            </span>
                          )}
                          {venue.is_alcohol_free && (
                            <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">
                              Alcohol-Free
                            </span>
                          )}
                          {venue.serves_mocktails && (
                            <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded">
                              Mocktails
                            </span>
                          )}
                          {venue.serves_kava && (
                            <span class="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded">
                              Kava
                            </span>
                          )}
                          {venue.serves_thc && (
                            <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded">
                              THC Drinks
                            </span>
                          )}
                          {venue.serves_hemp_drinks && (
                            <span class="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded">
                              Hemp Drinks
                            </span>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      ) : (
        <div class="text-center py-12 bg-gray-50 rounded-lg">
          <p class="text-gray-500 mb-4">No venues found in {cityName} yet.</p>
          <a 
            href="/contact" 
            class="text-indigo-600 hover:text-indigo-700 font-medium"
          >
            Know of a venue? Let us know →
          </a>
        </div>
      )}
    </div>
  </main>
</Layout> 
